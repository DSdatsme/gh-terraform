name: Terraform Builder

on:
  push:
    branches:
      - master
  workflow_dispatch:

# env:
#   SLACK_CHANNEL: CTR68RQ80

concurrency:
  group : ${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform_apply:

    name: Terraform Apply
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: env
        env: 
          STATUS: "Starting..."

      - name: Notify slack success
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: random
          status: Starting...
          color: warning

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - id: 'tf_init'
        name: Terraform Init
        run: terraform init
        continue-on-error: true

      - id: 'tf_plan'
        name: Terraform Plan
        run: terraform plan -out tf_plan_file
        if: ${{ !failure() }}
        continue-on-error: true
  
      - name: Slack message for approval
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: random
          status: "Waiting for approval... :sonic-waiting:"
          color: warning

      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        timeout-minutes: 20
        with:
          secret: ${{ github.TOKEN }}
          approvers: DSdatsme
          minimum-approvals: 1

      - id: 'tf_apply'
        name: Terraform Apply
        run: terraform apply tf_plan_file
        if: ${{ !failure() }}

      - name: Post notify on success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: random
          status: "SUCCESS :tada:"
          color: good

      - name: Post notify on failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: random
          status: "FAILED :/"
          color: danger
      
